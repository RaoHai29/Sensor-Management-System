{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\ali\\\\src\\\\Components\\\\Dials\\\\Dial2.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport axios from 'axios';\nimport dial from '../../images/dial.png';\nimport { useEffect, useState } from 'react';\nimport { Stack, Button } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  height: '50vh',\n  position: 'relative',\n  caretColor: 'transparent'\n};\nconst arrowCircleStyle = {\n  borderRadius: '50%',\n  position: 'absolute',\n  backgroundColor: 'white',\n  width: '280px',\n  aspectRatio: '1'\n};\nconst arrowStyle = {\n  position: 'absolute',\n  top: '66%',\n  left: 'calc(47% + 18px)',\n  width: '100px',\n  height: '4px',\n  zIndex: '-1',\n  backgroundColor: 'red',\n  transition: 'alls 0.02s',\n  transform: 'rotate(90deg)',\n  transformOrigin: '0% 50%',\n  borderTopLeftRadius: '30px',\n  borderTopRightRadius: '30px',\n  borderBottomLeftRadius: '30px',\n  borderBottomRightRadius: '30px'\n};\nconst imgStyle = {\n  width: '350px',\n  height: '350px',\n  display: 'block',\n  marginTop: '100px'\n};\nconst arrowBaseStyle = {\n  borderRadius: '50%',\n  position: 'absolute',\n  backgroundColor: 'rgb(99, 98, 98)',\n  width: '25px',\n  aspectRatio: '1',\n  zIndex: '3'\n};\nfunction Speedometer() {\n  _s();\n  const [speed, setSpeed] = useState([]);\n  const [value, setValue] = useState(0);\n  const [show, setShow] = useState(false);\n  const ky040 = 'http://localhost:5000/ky040';\n  const fetchData = async () => {\n    try {\n      const response = await axios.get(ky040);\n      const data = response.data;\n      const speed = data.map(item => item.temperature);\n      setSpeed(speed);\n      setValue(speed[speed.length - 1]);\n      // console.log(speed[speed.length - 1])\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n  useEffect(() => {\n    fetchData();\n    const interval = setInterval(() => {\n      fetchData();\n    }, 50); // Adjust the interval as needed (5000 milliseconds = 5 seconds)\n    return () => clearInterval(interval);\n  }, []);\n  const arrowRotation = `rotate(${value - 90}deg)`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: containerStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        ...arrowStyle,\n        transform: arrowRotation\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: dial,\n      alt: \"\",\n      style: imgStyle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n_s(Speedometer, \"SwlQgApdV/SvCbRx2kiyp0j+LUM=\");\n_c = Speedometer;\nexport default Speedometer;\nvar _c;\n$RefreshReg$(_c, \"Speedometer\");","map":{"version":3,"names":["React","axios","dial","useEffect","useState","Stack","Button","jsxDEV","_jsxDEV","containerStyle","display","justifyContent","alignItems","height","position","caretColor","arrowCircleStyle","borderRadius","backgroundColor","width","aspectRatio","arrowStyle","top","left","zIndex","transition","transform","transformOrigin","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","imgStyle","marginTop","arrowBaseStyle","Speedometer","_s","speed","setSpeed","value","setValue","show","setShow","ky040","fetchData","response","get","data","map","item","temperature","length","error","console","interval","setInterval","clearInterval","arrowRotation","style","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/ali/src/Components/Dials/Dial2.jsx"],"sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport dial from '../../images/dial.png';\r\nimport { useEffect, useState } from 'react';\r\nimport { Stack, Button } from '@mui/material';\r\n\r\nconst containerStyle = {\r\n  display: 'flex',\r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n  height: '50vh',\r\n  position: 'relative',\r\n  caretColor: 'transparent',\r\n};\r\n\r\nconst arrowCircleStyle = {\r\n  borderRadius: '50%',\r\n  position: 'absolute',\r\n  backgroundColor: 'white',\r\n  width: '280px',\r\n  aspectRatio: '1',\r\n};\r\n\r\nconst arrowStyle = {\r\n  position: 'absolute',\r\n  top: '66%',\r\n  left: 'calc(47% + 18px)',\r\n  width: '100px',\r\n  height: '4px',\r\n  zIndex: '-1',\r\n  backgroundColor: 'red',\r\n  transition: 'alls 0.02s',\r\n  transform: 'rotate(90deg)',\r\n  transformOrigin: '0% 50%',\r\n  borderTopLeftRadius: '30px',\r\n  borderTopRightRadius: '30px',\r\n  borderBottomLeftRadius: '30px',\r\n  borderBottomRightRadius: '30px',\r\n};\r\n\r\nconst imgStyle = {\r\n  width: '350px',\r\n  height: '350px',\r\n  display: 'block',\r\n  marginTop: '100px',\r\n};\r\n\r\nconst arrowBaseStyle = {\r\n  borderRadius: '50%',\r\n  position: 'absolute',\r\n  backgroundColor: 'rgb(99, 98, 98)',\r\n  width: '25px',\r\n  aspectRatio: '1',\r\n  zIndex: '3',\r\n};\r\n\r\nfunction Speedometer() {\r\n  const [speed, setSpeed] = useState([]);\r\n  const [value, setValue] = useState(0);\r\n  const [show, setShow] = useState(false);\r\n  const ky040 = 'http://localhost:5000/ky040';\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      const response = await axios.get(ky040);\r\n      const data = response.data;\r\n      const speed = data.map(item => item.temperature);\r\n      setSpeed(speed);\r\n      setValue(speed[speed.length - 1]);\r\n      // console.log(speed[speed.length - 1])\r\n    } catch (error) {\r\n      console.error('Error fetching data:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n    const interval = setInterval(() => {\r\n      fetchData();\r\n    }, 50); // Adjust the interval as needed (5000 milliseconds = 5 seconds)\r\n    return () => clearInterval(interval);\r\n\r\n  }, []);\r\n\r\n  const arrowRotation = `rotate(${value - 90}deg)`;\r\n\r\n  return (\r\n    <div style={containerStyle}>\r\n      {/* <div style={arrowCircleStyle}></div> */}\r\n      {/* <div style={arrowBaseStyle}></div> */}\r\n      <div style={{ ...arrowStyle, transform: arrowRotation }}></div>\r\n      <img src={dial} alt=\"\" style={imgStyle} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Speedometer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}