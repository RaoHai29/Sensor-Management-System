{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\ali\\\\src\\\\Components\\\\LineCharts\\\\Linechart2.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport CanvasJSReact from '@canvasjs/react-charts';\nimport { Stack, Button } from '@mui/material';\nimport './linechart.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CanvasJSChart = CanvasJSReact.CanvasJSChart;\nfunction LineChart() {\n  _s();\n  const [data, setData] = useState([]);\n  // const [currentTime, setCurrentTime] = useState(new Date());\n  const [show, setShow] = useState(false);\n  const [currentTime, setCurrentTime] = useState(new Date());\n  const ds18b20 = 'http://localhost:5000/ds18b20';\n  const handleStartClick = () => {\n    setShow(true);\n  };\n  const handleRefreshClick = async () => {\n    try {\n      await axios.delete(ds18b20); // Send a DELETE request to the server\n\n      // Reset the data state to an empty array\n      setData([]);\n\n      // Reset the currentTime state (optional)\n      setCurrentTime(new Date());\n\n      // Other logic...\n    } catch (error) {\n      console.error('Error deleting data:', error);\n    }\n  };\n  const handlePauseClick = () => {\n    setShow(false);\n  };\n  useEffect(() => {\n    let intervalId;\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(ds18b20);\n        const data = response.data;\n        console.log(data);\n        const formattedData = data.map(value => ({\n          x: value.id,\n          y: value.temperature\n        }));\n        setData(formattedData);\n        setCurrentTime(new Date());\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    if (show) {\n      fetchData(); // Fetch data initially\n      intervalId = setInterval(fetchData, 5000); // Fetch data every 5 seconds\n    } else {\n      clearInterval(intervalId); // Clear the interval if fetching is paused\n    }\n\n    return () => {\n      clearInterval(intervalId);\n    };\n  }, [show]);\n  const options = {\n    theme: 'light2',\n    animationEnabled: true,\n    title: {\n      text: 'DS18B20 - Timestamp to Temperature'\n    },\n    axisX: {\n      valueFormatString: '',\n      title: 'id' // Adjust the date format here as needed\n    },\n\n    axisY: {\n      title: 'Temperature (degrees Centigrade)' // Adjust the date format here as needed,\n    },\n\n    data: [{\n      type: 'spline',\n      xValueFormatString: '',\n      // Match the format to axisX's valueFormatString\n      yValueFormatString: '##.##',\n      dataPoints: data\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(CanvasJSChart, {\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"row\",\n        spacing: 10,\n        justifyContent: \"center\",\n        sx: {\n          marginTop: '100px'\n        },\n        children: /*#__PURE__*/_jsxDEV(Stack, {\n          direction: \"row\",\n          spacing: 10,\n          justifyContent: \"center\",\n          sx: {\n            marginTop: '100px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: handleStartClick,\n            id: \"bt1\",\n            className: show ? 'btn-green' : '',\n            children: \"Start\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: handleRefreshClick,\n            children: \"Refresh\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: handlePauseClick,\n            id: \"bt\",\n            className: !show ? 'btn-1-active' : '',\n            children: \"Pause\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(LineChart, \"hHFTI8AljIqjKbjAxHowXHK0eHY=\");\n_c = LineChart;\nexport default LineChart;\nvar _c;\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"names":["React","useEffect","useState","axios","CanvasJSReact","Stack","Button","jsxDEV","_jsxDEV","Fragment","_Fragment","CanvasJSChart","LineChart","_s","data","setData","show","setShow","currentTime","setCurrentTime","Date","ds18b20","handleStartClick","handleRefreshClick","delete","error","console","handlePauseClick","intervalId","fetchData","response","get","log","formattedData","map","value","x","id","y","temperature","setInterval","clearInterval","options","theme","animationEnabled","title","text","axisX","valueFormatString","axisY","type","xValueFormatString","yValueFormatString","dataPoints","children","fileName","_jsxFileName","lineNumber","columnNumber","direction","spacing","justifyContent","sx","marginTop","variant","onClick","className","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/ali/src/Components/LineCharts/Linechart2.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport CanvasJSReact from '@canvasjs/react-charts';\r\nimport { Stack, Button } from '@mui/material';\r\nimport './linechart.css'\r\nconst CanvasJSChart = CanvasJSReact.CanvasJSChart;\r\n\r\nfunction LineChart() {\r\n  const [data, setData] = useState([]);\r\n  // const [currentTime, setCurrentTime] = useState(new Date());\r\n  const [show, setShow] = useState(false);\r\n  const [currentTime, setCurrentTime] = useState(new Date());\r\n  const ds18b20 = 'http://localhost:5000/ds18b20';\r\n\r\n  const handleStartClick = () => {\r\n    setShow(true);\r\n\r\n  };\r\n\r\n  const handleRefreshClick = async () => {\r\n    try {\r\n        await axios.delete(ds18b20); // Send a DELETE request to the server\r\n\r\n        // Reset the data state to an empty array\r\n        setData([]);\r\n\r\n        // Reset the currentTime state (optional)\r\n        setCurrentTime(new Date());\r\n\r\n        // Other logic...\r\n    } catch (error) {\r\n        console.error('Error deleting data:', error);\r\n    }\r\n};\r\n\r\n\r\n  const handlePauseClick = () => {\r\n    setShow(false);\r\n   \r\n  };\r\n\r\n  useEffect(() => {\r\n    let intervalId;\r\n\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get(ds18b20);\r\n        const data = response.data;\r\n        console.log(data)\r\n        const formattedData = data.map((value) => ({\r\n          x: value.id,\r\n          y: value.temperature,\r\n        }));\r\n        setData(formattedData);\r\n        setCurrentTime(new Date());\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    };\r\n\r\n    if (show) {\r\n      fetchData(); // Fetch data initially\r\n      intervalId = setInterval(fetchData, 5000); // Fetch data every 5 seconds\r\n    } else {\r\n      clearInterval(intervalId); // Clear the interval if fetching is paused\r\n    }\r\n\r\n    return () => {\r\n      clearInterval(intervalId);\r\n    };\r\n  }, [show]);\r\n\r\n\r\n  const options = {\r\n    theme: 'light2',\r\n    animationEnabled: true,\r\n    title: {\r\n      text: 'DS18B20 - Timestamp to Temperature',\r\n    },\r\n    axisX: {\r\n      valueFormatString: '', \r\n      title: 'id'// Adjust the date format here as needed\r\n    },\r\n    axisY: {\r\n      title: 'Temperature (degrees Centigrade)'// Adjust the date format here as needed,\r\n    },\r\n    data: [\r\n      {\r\n        type: 'spline',\r\n        xValueFormatString: '', // Match the format to axisX's valueFormatString\r\n        yValueFormatString: '##.##',\r\n        dataPoints: data,\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* <div>\r\n        <p style={{ textAlign: 'center' }}>Current Time: {currentTime.toLocaleTimeString()}</p>\r\n      </div> */}\r\n      <div>\r\n        <CanvasJSChart options={options} />\r\n        <Stack direction='row' spacing={10} justifyContent=\"center\" sx={{ marginTop: '100px' }}>\r\n        <Stack direction='row' spacing={10} justifyContent=\"center\" sx={{ marginTop: '100px' }}>\r\n          <Button variant='contained' onClick={handleStartClick} id='bt1' className={show ? 'btn-green' : ''}>\r\n            Start\r\n          </Button>\r\n          <Button variant='contained' onClick={handleRefreshClick} >\r\n            Refresh\r\n          </Button>\r\n          <Button variant='contained' onClick={handlePauseClick} id='bt' className={!show ? 'btn-1-active' : ''} >\r\n            Pause\r\n          </Button>\r\n        </Stack>\r\n        </Stack> \r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LineChart;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}