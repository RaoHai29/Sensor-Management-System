{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\ali\\\\src\\\\Components\\\\LineCharts\\\\Linechart1.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport CanvasJSReact from '@canvasjs/react-charts';\nimport { Stack, Button } from '@mui/material';\nimport './linechart.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CanvasJSChart = CanvasJSReact.CanvasJSChart;\nfunction LineChart1() {\n  _s();\n  const [data, setData] = useState([]);\n  const [currentTime, setCurrentTime] = useState(new Date());\n  const [show, setShow] = useState(false);\n  const [refresh, setRefresh] = useState(false);\n  const [zValues, setZValues] = useState([]);\n  const ky040 = 'http://localhost:5000/ky040';\n  const handleStartClick = () => {\n    setShow(true);\n  };\n  const handleRefreshClick = async () => {\n    try {\n      await axios.delete(ky040); // Send a DELETE request to the server\n\n      // Reset the data state to an empty array\n      setData([]);\n\n      // Reset the currentTime state (optional)\n      setCurrentTime(new Date());\n      setRefresh(!refresh);\n\n      // Other logic...\n    } catch (error) {\n      console.error('Error deleting data:', error);\n    }\n  };\n  const handlePauseClick = () => {\n    setShow(false);\n  };\n  useEffect(() => {\n    let intervalId;\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(ky040);\n        const data = response.data;\n        const formattedData = data.map(value => ({\n          x: value.id,\n          y: value.angular_speed,\n          z: value.currentTime\n        }));\n        setData(formattedData);\n        setCurrentTime(new Date());\n\n        // Set the current time value for rendering\n        // Extract and update the 'z' values\n        const newZValues = formattedData.map(item => item.z);\n        setZValues(prevZValues => [...prevZValues, ...newZValues]);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    if (show) {\n      fetchData(); // Fetch data initially\n      intervalId = setInterval(fetchData, 20); // Fetch data every 5 seconds\n    } else {\n      clearInterval(intervalId); // Clear the interval if fetching is paused\n    }\n\n    return () => {\n      clearInterval(intervalId);\n    };\n  }, [show]);\n  const options = {\n    theme: 'light2',\n    animationEnabled: true,\n    title: {\n      text: 'KY040 - Timestamp to Angular Speed'\n    },\n    axisX: {\n      valueFormatString: '#',\n      title: '' // Adjust the date format here as needed\n    },\n\n    axisY: {\n      title: 'Angular Speed'\n    },\n    data: [{\n      type: 'spline',\n      xValueFormatString: '#',\n      // Match the format to axisX's valueFormatString\n      yValueFormatString: '#,##0.00',\n      dataPoints: data\n    }]\n  };\n  // Define the content to be displayed in the span\n  let spanContent = '';\n  if (!refresh) {\n    if (show) {\n      spanContent = zValues.join(', ');\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: 'center'\n        },\n        children: [\"Current Time: \", currentTime.toLocaleTimeString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(CanvasJSChart, {\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"time-show\",\n        children: zValues.map((z, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n          children: spanContent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 12\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"row\",\n        spacing: 10,\n        justifyContent: \"center\",\n        sx: {\n          marginTop: '100px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: handleStartClick,\n          id: \"bt1\",\n          className: show ? 'btn-green' : '',\n          children: \"Start\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: handleRefreshClick,\n          children: \"Refresh\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: handlePauseClick,\n          id: \"bt\",\n          className: !show ? 'btn-1-active' : '',\n          children: \"Pause\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(LineChart1, \"DnuIHMDrrQEkMy4hhtP4p4v1qf0=\");\n_c = LineChart1;\nexport default LineChart1;\nvar _c;\n$RefreshReg$(_c, \"LineChart1\");","map":{"version":3,"names":["React","useEffect","useState","axios","CanvasJSReact","Stack","Button","jsxDEV","_jsxDEV","Fragment","_Fragment","CanvasJSChart","LineChart1","_s","data","setData","currentTime","setCurrentTime","Date","show","setShow","refresh","setRefresh","zValues","setZValues","ky040","handleStartClick","handleRefreshClick","delete","error","console","handlePauseClick","intervalId","fetchData","response","get","formattedData","map","value","x","id","y","angular_speed","z","newZValues","item","prevZValues","setInterval","clearInterval","options","theme","animationEnabled","title","text","axisX","valueFormatString","axisY","type","xValueFormatString","yValueFormatString","dataPoints","spanContent","join","children","style","textAlign","toLocaleTimeString","fileName","_jsxFileName","lineNumber","columnNumber","className","index","direction","spacing","justifyContent","sx","marginTop","variant","onClick","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/ali/src/Components/LineCharts/Linechart1.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport CanvasJSReact from '@canvasjs/react-charts';\r\nimport { Stack, Button } from '@mui/material';\r\nimport './linechart.css';\r\n\r\nconst CanvasJSChart = CanvasJSReact.CanvasJSChart;\r\n\r\nfunction LineChart1() {\r\n  const [data, setData] = useState([]);\r\n  const [currentTime, setCurrentTime] = useState(new Date());\r\n  const [show, setShow] = useState(false);\r\n  const[refresh,setRefresh]=useState(false)\r\n  const [zValues, setZValues] = useState([]);\r\n  const ky040 = 'http://localhost:5000/ky040';\r\n\r\n  const handleStartClick = () => {\r\n    setShow(true);\r\n  };\r\n\r\n  const handleRefreshClick = async () => {\r\n    try {\r\n        await axios.delete(ky040); // Send a DELETE request to the server\r\n\r\n        // Reset the data state to an empty array\r\n        setData([]);\r\n\r\n        // Reset the currentTime state (optional)\r\n        setCurrentTime(new Date());\r\n        setRefresh(!refresh); \r\n\r\n        // Other logic...\r\n    } catch (error) {\r\n        console.error('Error deleting data:', error);\r\n    }\r\n};\r\n\r\n  const handlePauseClick = () => {\r\n    setShow(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let intervalId;\r\n\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get(ky040);\r\n        const data = response.data;\r\n        const formattedData = data.map((value) => ({\r\n          x: value.id,\r\n          y: value.angular_speed,\r\n          z: value.currentTime,\r\n        }));\r\n        setData(formattedData);\r\n        setCurrentTime(new Date());\r\n\r\n         // Set the current time value for rendering\r\n     // Extract and update the 'z' values\r\n     const newZValues = formattedData.map((item) => item.z);\r\n     setZValues((prevZValues) => [...prevZValues, ...newZValues]);\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    };\r\n\r\n    if (show) {\r\n      fetchData(); // Fetch data initially\r\n      intervalId = setInterval(fetchData, 20); // Fetch data every 5 seconds\r\n    } else {\r\n      clearInterval(intervalId); // Clear the interval if fetching is paused\r\n    }\r\n\r\n    return () => {\r\n      clearInterval(intervalId);\r\n    };\r\n  }, [show]);\r\n\r\n  const options = {\r\n    theme: 'light2',\r\n    animationEnabled: true,\r\n    title: {\r\n      text: 'KY040 - Timestamp to Angular Speed',\r\n    },\r\n    axisX: {\r\n      valueFormatString: '#',\r\n      title: '', // Adjust the date format here as needed\r\n    },\r\n    axisY: {\r\n      title: 'Angular Speed',\r\n    },\r\n    data: [\r\n      {\r\n        type: 'spline',\r\n        xValueFormatString: '#', // Match the format to axisX's valueFormatString\r\n        yValueFormatString: '#,##0.00',\r\n        dataPoints: data,\r\n      },\r\n    ],\r\n  };\r\n // Define the content to be displayed in the span\r\n let spanContent = '';\r\n if (!refresh) {\r\n   if (show) {\r\n     spanContent = zValues.join(', ');\r\n   }\r\n }\r\n  return (\r\n    <>\r\n      <div>\r\n        <p style={{ textAlign: 'center' }}>Current Time: {currentTime.toLocaleTimeString()}</p>\r\n      </div>\r\n      <div>\r\n        <CanvasJSChart options={options} />\r\n        <div className='time-show'>\r\n        {zValues.map((z, index) => (\r\n           <span>{spanContent}</span>\r\n          ))}\r\n        </div>\r\n        <Stack direction='row' spacing={10} justifyContent=\"center\" sx={{ marginTop: '100px' }}>\r\n          <Button variant='contained' onClick={handleStartClick} id='bt1' className={show ? 'btn-green' : ''}>\r\n            Start\r\n          </Button>\r\n          <Button variant='contained' onClick={handleRefreshClick}>\r\n            Refresh\r\n          </Button>\r\n          <Button variant='contained' onClick={handlePauseClick} id='bt' className={!show ? 'btn-1-active' : ''} >\r\n            Pause\r\n          </Button>\r\n        </Stack>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LineChart1;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}